{"version":3,"sources":["webpack://simple-tooltip/webpack/universalModuleDefinition","webpack://simple-tooltip/webpack/bootstrap","webpack://simple-tooltip/./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js","webpack://simple-tooltip/external {\"commonjs\":\"vue\",\"commonjs2\":\"vue\",\"root\":\"Vue\"}","webpack://simple-tooltip/./src/index.js","webpack://simple-tooltip/./node_modules/@vue/cli-service/lib/commands/build/entry-lib.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;AClFA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA,mD;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,qBAAqB,2BAA2B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;;AC5KA;AACA;+EACA;AACA","file":"simple-tooltip.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vue\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"simple-tooltip\"] = factory(require(\"vue\"));\n\telse\n\t\troot[\"simple-tooltip\"] = factory(root[\"Vue\"]);\n})((typeof self !== 'undefined' ? self : this), function(__WEBPACK_EXTERNAL_MODULE__8bbf__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"fb15\");\n","// This file is imported into lib/wc client bundles.\n\nif (typeof window !== 'undefined') {\n  var i\n  if ((i = window.document.currentScript) && (i = i.src.match(/(.+\\/)[^/]+\\.js$/))) {\n    __webpack_public_path__ = i[1] // eslint-disable-line\n  }\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__8bbf__;","import Vue from 'vue'\nexport default Vue.directive('tooltip', {\n  bind: function (el, binding) {\n    if (binding.value && binding.value !== '') {\n      createTooltip(el, binding)\n    }\n  },\n  inserted(el) {\n    // Update z-Index\n    if (el.tooltip) {\n      let zIndex = findParentZIndex(el)\n      if (!zIndex || zIndex === 'auto' || zIndex === '') {\n        zIndex = '10'\n      }\n      zIndex = parseInt(zIndex)\n      zIndex += 10\n      zIndex = zIndex.toString()\n      let oldTooltipElements = document.getElementsByClassName(el.tooltip)\n      for (let i = 0; i < oldTooltipElements.length; i++) {\n        oldTooltipElements[i].style.zIndex = zIndex\n      }\n    }\n  },\n  unbind: function (el) {\n    if (el.hasOwnProperty('tooltip') && el.tooltip) {\n      let oldTooltipElements = document.getElementsByClassName(el.tooltip)\n      for (let i = 0; oldTooltipElements.length; i++) {\n        if (oldTooltipElements[i]) {\n          oldTooltipElements[i].parentNode.removeChild(oldTooltipElements[i])\n          i--\n        }\n      }\n    }\n  },\n  componentUpdated: function (el, binding) {\n    if (el.hasOwnProperty('tooltip') && el.tooltip) {\n      let oldTooltipElements = document.getElementsByClassName(el.tooltip)\n      for (let i = 0; i < oldTooltipElements.length; i++) {\n        if (oldTooltipElements[i]) {\n          if (oldTooltipElements[i].type === 'box') {\n            let tooltipText = oldTooltipElements[i].getElementsByClassName('tooltip-text')\n            if (tooltipText.length) {\n              tooltipText[0].innerHTML = binding.value\n            }\n          }\n        }\n      }\n    }\n  }\n})\nfunction createTooltip(el, binding) {\n  let tooltipBox = document.createElement('div')\n  let tooltipArrow = document.createElement('div')\n  let tooltipText = document.createElement('span')\n\n  tooltipText.classList.add('tooltip-text')\n  tooltipText.innerHTML = binding.value\n  let zIndex = findParentZIndex(el)\n  if (!zIndex || zIndex === 'auto' || zIndex === '') {\n    zIndex = '10'\n  }\n  zIndex = parseInt(zIndex)\n  zIndex += 10\n  zIndex = zIndex.toString()\n\n  tooltipBox.type = 'box'\n  tooltipBox.style.wordBreak = 'break-word'\n  tooltipBox.style.position = 'absolute'\n  tooltipBox.style.zIndex = zIndex\n  tooltipBox.style.backgroundColor = 'black'\n  tooltipBox.style.color = '#fff'\n  tooltipBox.style.padding = '5px 20px 5px 20px'\n  tooltipBox.style.borderRadius = '6px'\n  tooltipBox.style.display = 'none'\n  tooltipBox.style.fontSize = '12px'\n  tooltipBox.style.maxWidth = '320px'\n\n  tooltipArrow.type = 'arrow'\n  tooltipArrow.style.content = ''\n  tooltipArrow.style.position = 'absolute'\n  tooltipArrow.style.zIndex = zIndex\n  tooltipArrow.style.borderWidth = '5px'\n  tooltipArrow.style.borderStyle = 'solid'\n  tooltipArrow.style.display = 'none'\n\n  tooltipBox.appendChild(tooltipText)\n  let idClass = makeId()\n  tooltipBox.classList.add(idClass)\n  tooltipArrow.classList.add(idClass)\n  el.tooltip = idClass\n\n  let body = document.getElementsByTagName('body')[0]\n  body.appendChild(tooltipBox)\n  body.appendChild(tooltipArrow)\n  el.onmouseover = function () {\n    let scrollLeft = window.pageXOffset || document.documentElement.scrollLeft\n    let scrollTop = window.pageYOffset || document.documentElement.scrollTop\n    tooltipBox.style.display = 'inline-block'\n    tooltipArrow.style.display = 'inline-block'\n    switch (binding.arg) {\n      case 'bottom':\n        tooltipBox.style.left = el.getBoundingClientRect().left - tooltipBox.getBoundingClientRect().width / 2 + el.getBoundingClientRect().width / 2 + scrollLeft + 'px'\n        tooltipBox.style.top = el.getBoundingClientRect().top + el.getBoundingClientRect().height + tooltipArrow.getBoundingClientRect().height / 2 + scrollTop + 'px'\n        tooltipArrow.style.left = el.getBoundingClientRect().left + el.getBoundingClientRect().width / 2 + scrollLeft + 'px'\n        tooltipArrow.style.top = el.getBoundingClientRect().top + el.getBoundingClientRect().height - tooltipArrow.getBoundingClientRect().height / 2  + scrollTop + 'px'\n        tooltipArrow.style.borderColor = 'transparent transparent black transparent'\n        tooltipArrow.style.marginLeft = '-5px'\n        break\n      case 'right':\n        tooltipBox.style.left = el.getBoundingClientRect().left + el.getBoundingClientRect().width + tooltipArrow.getBoundingClientRect().width / 2 + scrollLeft + 'px'\n        tooltipBox.style.top = el.getBoundingClientRect().top - tooltipBox.getBoundingClientRect().height / 2 + el.getBoundingClientRect().height / 2   + scrollTop + 'px'\n        tooltipArrow.style.left = el.getBoundingClientRect().left + el.getBoundingClientRect().width - tooltipArrow.getBoundingClientRect().width /2 + scrollLeft + 'px'\n        tooltipArrow.style.top = el.getBoundingClientRect().top + el.getBoundingClientRect().height / 2 + scrollTop + 'px'\n        tooltipArrow.style.borderColor = 'transparent black transparent transparent'\n        tooltipArrow.style.marginTop = '-5px'\n        break\n      case 'left':\n        tooltipBox.style.left = el.getBoundingClientRect().left - tooltipBox.getBoundingClientRect().width - tooltipArrow.getBoundingClientRect().width / 2 + scrollLeft + 'px'\n        tooltipBox.style.top = el.getBoundingClientRect().top - tooltipBox.getBoundingClientRect().height / 2 + el.getBoundingClientRect().height / 2   + scrollTop + 'px'\n        tooltipArrow.style.left = el.getBoundingClientRect().left - tooltipArrow.getBoundingClientRect().width / 2 + scrollLeft + 'px'\n        tooltipArrow.style.top = el.getBoundingClientRect().top + el.getBoundingClientRect().height / 2 + scrollTop + 'px'\n        tooltipArrow.style.borderColor = 'transparent transparent transparent black'\n        tooltipArrow.style.marginTop = '-5px'\n        break\n      default:\n        tooltipBox.style.left = el.getBoundingClientRect().left - tooltipBox.getBoundingClientRect().width / 2 + el.getBoundingClientRect().width / 2 + scrollLeft + 'px'\n        tooltipBox.style.top = el.getBoundingClientRect().top - tooltipBox.getBoundingClientRect().height - tooltipArrow.getBoundingClientRect().height / 2 + scrollTop + 'px'\n        tooltipArrow.style.left = el.getBoundingClientRect().left + el.getBoundingClientRect().width / 2 + scrollLeft + 'px'\n        tooltipArrow.style.top = el.getBoundingClientRect().top - tooltipArrow.getBoundingClientRect().height / 2 + scrollTop + 'px'\n        tooltipArrow.style.borderColor = 'black transparent transparent transparent'\n        tooltipArrow.style.marginLeft = '-5px'\n        break\n    }\n  }\n  el.onmouseleave = function () {\n    tooltipBox.style.display = 'none'\n    tooltipArrow.style.display = 'none'\n  }\n  tooltipArrow.onmouseover = function () {\n    tooltipBox.style.display = 'inline-block'\n    tooltipArrow.style.display = 'inline-block'\n  }\n  tooltipArrow.onmouseleave = function () {\n    tooltipBox.style.display = 'none'\n    tooltipArrow.style.display = 'none'\n  }\n  tooltipBox.onmouseover = function () {\n    tooltipBox.style.display = 'inline-block'\n    tooltipArrow.style.display = 'inline-block'\n  }\n  tooltipBox.onmouseleave = function () {\n    tooltipBox.style.display = 'none'\n    tooltipArrow.style.display = 'none'\n  }\n}\nfunction findParentZIndex(el) {\n  let zIndex\n  if (el && el.tagName !== 'BODY') {\n    zIndex = document.defaultView.getComputedStyle(el).getPropertyValue('z-index')\n    if (zIndex === 'auto' || zIndex === '') {\n      zIndex = findParentZIndex(el.parentElement)\n    }\n  }\n  return zIndex\n}\nfunction makeId() {\n  let text = ''\n  let possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n  for (let i = 0; i < 5; i++) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length))\n  }\n  return text\n}\n","import './setPublicPath'\nimport mod from '~entry'\nexport default mod\nexport * from '~entry'\n"],"sourceRoot":""}